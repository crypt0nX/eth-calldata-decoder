{"version":3,"sources":["components/common/JsonTextArea.js","components/Body/ABIInput.js","components/Body/AddressInput.js","components/Body/Output.js","components/Body/networkInfo.js","components/Body/index.js","components/Navbar.js","components/Footer.js","App.js","theme.js","index.js"],"names":["hljs","registerLanguage","require","ChakraSimpleEditor","chakra","SimpleEditor","JsonTextArea","value","setValue","bg","placeholder","ariaLabel","readOnly","canResize","colorMode","useColorMode","h","overflowY","className","border","borderColor","light","dark","roundedLeft","roundedRight","resize","onValueChange","highlight","contents","language","fontFamily","ABIInput","abi","setAbi","btnDisabled","decode","onClick","leftIcon","style","marginTop","colorScheme","disabled","AddressInput","contractAddress","setContractAddress","networkInfo","setNetworkIndex","onChange","e","target","variant","_hover","cursor","map","network","i","name","Output","chainID","api","process","REACT_APP_ETHERSCAN_API_KEY","REACT_APP_ARBISCAN_API_KEY","REACT_APP_SNOWTRACE_API_KEY","REACT_APP_BSCSCAN_API_KEY","REACT_APP_FTMSCAN_API_KEY","REACT_APP_OPTIMISM_API_KEY","REACT_APP_POLYGONSCAN_API_KEY","apikey","Body","bgColor","toast","useToast","defaultABIPlaceholder","useState","tabIndex","setTabIndex","calldata","setCalldata","networkIndex","output","setOutput","disableABIDecodeBtn","setDisableABIDecodeBtn","disableAddressDecodeBtn","setDisableAddressDecodeBtn","_decodeWithABI","_abi","_calldata","decoded","abiDecoder","addABI","JSON","parse","stringify","decodeMethod","undefined","title","status","isClosable","duration","decodeWithAddress","axios","get","toChecksumAddress","response","fetched_abi","data","params","address","message","result","recursiveBNToString","args","arg","BigNumber","isBigNumber","toString","constructor","Array","_getAllPossibleDecoded","functionsArr","allPossibleDecoded","length","fn","iface","utils","Interface","parseTransaction","push","function","decodeWithSelector","selector","slice","results","f","allPossibilities","possibleFunctions","hex_signature","text_signature","useEffect","my","minW","trim","mt","index","isFitted","Navbar","toggleColorMode","py","px","borderBottom","borderBottomColor","flex","maxW","justifyContent","alignItems","rounded","w","pl","href","isExternal","icon","faGithub","size","Social","link","Footer","borderTop","borderTopColor","decoration","display","spacing","faTwitter","faLinkedin","App","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b4ab470.chunk.js","sourcesContent":["import React from \"react\";\nimport { chakra, Box, useColorMode } from \"@chakra-ui/react\";\nimport SimpleEditor from \"react-simple-code-editor\";\n\nimport \"../../styles/scroll.css\";\nimport \"highlight.js/styles/obsidian.css\";\n// only import the required language support\nimport hljs from \"highlight.js/lib/core\";\nhljs.registerLanguage(\"json\", require(\"highlight.js/lib/languages/json\"));\n\nconst ChakraSimpleEditor = chakra(SimpleEditor);\n\nfunction JsonTextArea({\n  value,\n  setValue,\n  bg,\n  placeholder,\n  ariaLabel,\n  readOnly,\n  canResize,\n}) {\n  const { colorMode } = useColorMode();\n  const borderColor = { light: \"gray.500\", dark: \"gray.400\" };\n\n  return (\n    <Box\n      h=\"60\"\n      overflowY=\"scroll\"\n      className=\"scroll\"\n      bg={bg}\n      border=\"1px\"\n      borderColor={borderColor[colorMode]}\n      roundedLeft=\"md\"\n      roundedRight=\"4px\"\n      resize={canResize ? \"both\" : \"none\"}\n    >\n      <ChakraSimpleEditor\n        placeholder={placeholder}\n        aria-label={ariaLabel}\n        value={value}\n        onValueChange={setValue}\n        readOnly={readOnly}\n        highlight={(contents) =>\n          hljs.highlight(contents, { language: \"json\" }).value\n        }\n        fontFamily={\"SFMono-Regular,Menlo,Monaco,Consolas,monospace\"}\n      />\n    </Box>\n  );\n}\n\nexport default JsonTextArea;\n","import React from \"react\";\nimport { VStack, FormControl, FormLabel, Button } from \"@chakra-ui/react\";\nimport { UnlockIcon } from \"@chakra-ui/icons\";\nimport JsonTextArea from \"../common/JsonTextArea\";\n\nfunction ABIInput({ abi, setAbi, btnDisabled, decode, bg }) {\n  return (\n    <VStack>\n      <FormControl>\n        <FormLabel>Input ABI</FormLabel>\n        <JsonTextArea\n          value={abi}\n          setValue={setAbi}\n          bg={bg}\n          placeholder=\"JSON ABI\"\n          ariaLabel=\"json abi\"\n        />\n      </FormControl>\n      <Button\n        onClick={decode}\n        leftIcon={<UnlockIcon />}\n        style={{ marginTop: \"20px\" }}\n        colorScheme=\"blue\"\n        disabled={btnDisabled}\n      >\n        Decode\n      </Button>\n    </VStack>\n  );\n}\n\nexport default ABIInput;\n","import React from \"react\";\nimport {\n  VStack,\n  Input,\n  Select,\n  FormControl,\n  FormLabel,\n  Button,\n} from \"@chakra-ui/react\";\nimport { UnlockIcon } from \"@chakra-ui/icons\";\n\nfunction AddressInput({\n  contractAddress,\n  setContractAddress,\n  networkInfo,\n  setNetworkIndex,\n  btnDisabled,\n  decode,\n  bg,\n}) {\n  return (\n    <VStack>\n      <FormControl>\n        <FormLabel>Contract Address</FormLabel>\n        <Input\n          value={contractAddress}\n          onChange={(e) => setContractAddress(e.target.value)}\n          placeholder=\"Address\"\n          aria-label=\"contract address\"\n          bg={bg}\n        />\n      </FormControl>\n      <Select\n        placeholder=\"Select Network\"\n        variant=\"filled\"\n        _hover={{ cursor: \"pointer\" }}\n        onChange={(e) => setNetworkIndex(e.target.value)}\n      >\n        {networkInfo.map((network, i) => (\n          <option value={i} key={i}>\n            {network.name}\n          </option>\n        ))}\n      </Select>\n      <Button\n        onClick={decode}\n        leftIcon={<UnlockIcon />}\n        style={{ marginTop: \"20px\" }}\n        colorScheme=\"blue\"\n        disabled={btnDisabled}\n      >\n        Decode\n      </Button>\n    </VStack>\n  );\n}\n\nexport default AddressInput;\n","import React from \"react\";\nimport { FormControl, FormLabel } from \"@chakra-ui/react\";\nimport JsonTextArea from \"../common/JsonTextArea\";\n\nfunction Output({ value }) {\n  return (\n    <FormControl>\n      <FormLabel>Output:</FormLabel>\n      <JsonTextArea\n        value={value}\n        readOnly={true}\n        ariaLabel=\"output\"\n        canResize={true}\n      />\n    </FormControl>\n  );\n}\n\nexport default Output;\n","const networkInfo = [\n  {\n    chainID: 1,\n    name: \"Ethereum Mainnet\",\n    api: `https://api.etherscan.io/api?module=contract&action=getabi&apikey=${process.env.REACT_APP_ETHERSCAN_API_KEY}`,\n  },\n  {\n    chainID: 42161,\n    name: \"Arbitrum One\",\n    api: `https://api.arbiscan.io/api?module=contract&action=getabi&apikey=${process.env.REACT_APP_ARBISCAN_API_KEY}`,\n  },\n  {\n    chainID: 43114,\n    name: \"Avalanche\",\n    api: `https://api.snowtrace.io/api?module=contract&action=getabi&apikey=${process.env.REACT_APP_SNOWTRACE_API_KEY}`,\n  },\n  {\n    chainID: 56,\n    name: \"Binance Smart Chain\",\n    api: `https://api.bscscan.com/api?module=contract&action=getabi&apikey=${process.env.REACT_APP_BSCSCAN_API_KEY}`,\n  },\n  {\n    chainID: 250,\n    name: \"Fantom Opera\",\n    api: `https://api.ftmscan.com/api?module=contract&action=getabi&apikey=${process.env.REACT_APP_FTMSCAN_API_KEY}`,\n  },\n  {\n    chainID: 10,\n    name: \"Optimism\",\n    api: `https://api-optimistic.etherscan.io/api?module=contract&action=getabi&apikey=${process.env.REACT_APP_OPTIMISM_API_KEY}`,\n  },\n  {\n    chainID: 137,\n    name: \"Polygon\",\n    api: `https://api.polygonscan.com/api?module=contract&action=getabi&apikey=${process.env.REACT_APP_POLYGONSCAN_API_KEY}`,\n  },\n\n  {\n    chainID: 42,\n    name: \"Kovan Testnet\",\n    api: `https://api.etherscan.io/api?module=contract&action=getabi&apikey=${process.env.REACT_APP_ETHERSCAN_API_KEY}`,\n    apikey: process.env.REACT_APP_ETHERSCAN_API_KEY,\n  },\n  {\n    chainID: 4,\n    name: \"Rinkeby Testnet\",\n    api: `https://api.etherscan.io/api?module=contract&action=getabi&apikey=${process.env.REACT_APP_ETHERSCAN_API_KEY}`,\n    apikey: process.env.REACT_APP_ETHERSCAN_API_KEY,\n  },\n  {\n    chainID: 5,\n    name: \"Goerli Testnet\",\n    api: `https://api.etherscan.io/api?module=contract&action=getabi&apikey=${process.env.REACT_APP_ETHERSCAN_API_KEY}`,\n    apikey: process.env.REACT_APP_ETHERSCAN_API_KEY,\n  },\n];\n\nexport default networkInfo;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Textarea,\n  FormControl,\n  useColorMode,\n  FormLabel,\n  Divider,\n  Box,\n  useToast,\n  Button,\n  Center,\n  Text,\n} from \"@chakra-ui/react\";\nimport { UnlockIcon } from \"@chakra-ui/icons\";\nimport { toChecksumAddress } from \"ethereum-checksum-address\";\nimport { utils, BigNumber } from \"ethers\";\nimport ABIInput from \"./ABIInput\";\nimport AddressInput from \"./AddressInput\";\nimport Output from \"./Output\";\nimport abiDecoder from \"abi-decoder\";\nimport axios from \"axios\";\nimport networkInfo from \"./networkInfo\";\n\nfunction Body() {\n  const { colorMode } = useColorMode();\n  const bgColor = { light: \"white\", dark: \"gray.700\" };\n  const toast = useToast();\n\n  const defaultABIPlaceholder = \" \\n \\n \\n \\n \\n \\n \\n \\n \\n \";\n\n  const [tabIndex, setTabIndex] = useState(0);\n  const [calldata, setCalldata] = useState(\"\");\n  const [contractAddress, setContractAddress] = useState(\"\");\n  const [networkIndex, setNetworkIndex] = useState(\"\");\n  const [abi, setAbi] = useState(defaultABIPlaceholder);\n  const [output, setOutput] = useState(\"\");\n\n  const [disableABIDecodeBtn, setDisableABIDecodeBtn] = useState(true);\n  const [disableAddressDecodeBtn, setDisableAddressDecodeBtn] = useState(true);\n\n  const decodeWithABI = () => {\n    _decodeWithABI(abi, calldata);\n  };\n\n  const _decodeWithABI = (_abi, _calldata) => {\n    abiDecoder.addABI(JSON.parse(_abi));\n    let decoded;\n    try {\n      decoded = JSON.stringify(\n        abiDecoder.decodeMethod(_calldata),\n        undefined,\n        2\n      );\n    } catch {\n      toast({\n        title: \"Incorrect Calldata\",\n        status: \"error\",\n        isClosable: true,\n        duration: 2000,\n      });\n      return;\n    }\n    if (decoded) {\n      setOutput(decoded);\n      toast({\n        title: \"Successfully Decoded\",\n        status: \"success\",\n        isClosable: true,\n        duration: 1000,\n      });\n    } else {\n      toast({\n        title: \"Can't Decode Calldata\",\n        status: \"error\",\n        isClosable: true,\n        duration: 1000,\n      });\n    }\n  };\n\n  const decodeWithAddress = async () => {\n    // get ABI\n    let fetched_abi;\n    // from Sourcify\n    try {\n      const response = await axios.get(\n        `https://repo.sourcify.dev/contracts/full_match/${\n          networkInfo[networkIndex].chainID\n        }/${toChecksumAddress(contractAddress)}/metadata.json`\n      );\n      fetched_abi = JSON.stringify(response.data.output.abi);\n    } catch {\n      // from Etherscan API\n      const response = await axios.get(networkInfo[networkIndex].api, {\n        params: {\n          address: contractAddress,\n        },\n      });\n\n      if (response.data.message === \"OK\") {\n        fetched_abi = response.data.result;\n      } else {\n        toast({\n          title: \"ABI Not found\",\n          status: \"error\",\n          isClosable: true,\n          duration: 2000,\n        });\n      }\n    }\n\n    setAbi(JSON.stringify(JSON.parse(fetched_abi), undefined, 2));\n    toast({\n      title: \"ABI Fetched from Address\",\n      status: \"success\",\n      isClosable: true,\n      duration: 1000,\n    });\n    setTabIndex(1);\n\n    _decodeWithABI(fetched_abi, calldata);\n  };\n\n  const recursiveBNToString = (args) => {\n    return args.map((arg) =>\n      BigNumber.isBigNumber(arg)\n        ? arg.toString()\n        : // if arg is a struct in solidity\n        arg.constructor === Array\n        ? recursiveBNToString(arg)\n        : arg\n    );\n  };\n\n  const _getAllPossibleDecoded = (functionsArr) => {\n    let allPossibleDecoded = [];\n    for (var i = 0; i < functionsArr.length; i++) {\n      const fn = functionsArr[i];\n      const _abi = [`function ${fn}`];\n\n      const iface = new utils.Interface(_abi);\n      try {\n        let { args } = iface.parseTransaction({ data: calldata });\n        allPossibleDecoded.push({\n          function: fn,\n          params: recursiveBNToString(args),\n        });\n      } catch {\n        continue;\n      }\n    }\n    return allPossibleDecoded;\n  };\n\n  const decodeWithSelector = async () => {\n    // from sig.eth.samczsun.com\n    const selector = calldata.slice(0, 10);\n    const response = await axios.get(\n      \"https://sig.eth.samczsun.com/api/v1/signatures\",\n      {\n        params: {\n          function: selector,\n        },\n      }\n    );\n    const results = response.data.result.function[selector].map((f) => f.name);\n    if (results.length > 0) {\n      // can have multiple entries with the same selector\n      const allPossibleDecoded = _getAllPossibleDecoded(results);\n\n      if (allPossibleDecoded.length > 0) {\n        const decoded = JSON.stringify(\n          {\n            allPossibilities: allPossibleDecoded,\n          },\n          undefined,\n          2\n        );\n        setOutput(decoded);\n        toast({\n          title: \"Successfully Decoded\",\n          status: \"success\",\n          isClosable: true,\n          duration: 1000,\n        });\n      } else {\n        setOutput(\n          JSON.stringify(\n            {\n              possibleFunctions: results,\n            },\n            undefined,\n            2\n          )\n        );\n        toast({\n          title: \"Can't Decode Calldata\",\n          status: \"error\",\n          isClosable: true,\n          duration: 4000,\n        });\n      }\n    } else {\n      // from 4byte.directory\n      const response = await axios.get(\n        \"https://www.4byte.directory/api/v1/signatures/\",\n        {\n          params: {\n            hex_signature: selector,\n          },\n        }\n      );\n      const results = response.data.results.map((f) => f.text_signature);\n      if (results.length > 0) {\n        // can have multiple entries with the same selector\n        const allPossibleDecoded = _getAllPossibleDecoded(results);\n\n        if (allPossibleDecoded.length > 0) {\n          const decoded = JSON.stringify(\n            {\n              allPossibilities: allPossibleDecoded,\n            },\n            undefined,\n            2\n          );\n          setOutput(decoded);\n          toast({\n            title: \"Successfully Decoded\",\n            status: \"success\",\n            isClosable: true,\n            duration: 1000,\n          });\n        } else {\n          setOutput(\n            JSON.stringify(\n              {\n                possibleFunctions: results,\n              },\n              undefined,\n              2\n            )\n          );\n          toast({\n            title: \"Can't Decode Calldata\",\n            status: \"error\",\n            isClosable: true,\n            duration: 4000,\n          });\n        }\n      } else {\n        toast({\n          title: \"Can't Decode Calldata\",\n          status: \"error\",\n          isClosable: true,\n          duration: 1000,\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (calldata && abi && abi !== defaultABIPlaceholder) {\n      setDisableABIDecodeBtn(false);\n    } else {\n      setDisableABIDecodeBtn(true);\n    }\n  }, [calldata, abi]);\n\n  useEffect(() => {\n    if (calldata && contractAddress && networkIndex) {\n      setDisableAddressDecodeBtn(false);\n    } else {\n      setDisableAddressDecodeBtn(true);\n    }\n  }, [calldata, contractAddress, networkIndex]);\n\n  return (\n    <Container my=\"16\" minW={[\"0\", \"0\", \"2xl\", \"2xl\"]}>\n      <FormControl>\n        <FormLabel>Enter Calldata</FormLabel>\n        <Textarea\n          placeholder=\"Calldata\"\n          aria-label=\"Calldata\"\n          value={calldata}\n          onChange={(e) => setCalldata(e.target.value.trim())}\n          bg={bgColor[colorMode]}\n        />\n      </FormControl>\n      <Tabs\n        mt=\"6\"\n        variant=\"enclosed\"\n        index={tabIndex}\n        onChange={setTabIndex}\n        isFitted\n      >\n        <TabList>\n          <Tab>No ABI</Tab>\n          <Tab>Input ABI</Tab>\n          <Tab>Enter Address</Tab>\n        </TabList>\n        <TabPanels mt=\"3\">\n          <TabPanel>\n            <Text>\n              <b>Note:</b> There might be multiple functions possible for the\n              same 4byte signature. Showing the most relevant possiblities below\n              on decoding.\n            </Text>\n            <Center>\n              <Button\n                onClick={decodeWithSelector}\n                leftIcon={<UnlockIcon />}\n                style={{ marginTop: \"20px\" }}\n                colorScheme=\"blue\"\n                disabled={!calldata}\n              >\n                Decode\n              </Button>\n            </Center>\n          </TabPanel>\n          <TabPanel>\n            <ABIInput\n              abi={abi}\n              setAbi={setAbi}\n              btnDisabled={disableABIDecodeBtn}\n              decode={decodeWithABI}\n              bg={bgColor[colorMode]}\n            />\n          </TabPanel>\n          <TabPanel>\n            <AddressInput\n              contractAddress={contractAddress}\n              setContractAddress={setContractAddress}\n              networkInfo={networkInfo}\n              setNetworkIndex={setNetworkIndex}\n              btnDisabled={disableAddressDecodeBtn}\n              decode={decodeWithAddress}\n              bg={bgColor[colorMode]}\n            />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n      <Divider />\n      <Box mt=\"4\">\n        <Output value={output} />\n      </Box>\n    </Container>\n  );\n}\n\nexport default Body;\n","import React from \"react\";\nimport {\n  Button,\n  useColorMode,\n  Flex,\n  Heading,\n  Spacer,\n  Box,\n  Link,\n} from \"@chakra-ui/react\";\nimport { SunIcon, MoonIcon } from \"@chakra-ui/icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nfunction Navbar() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const underlineColor = { light: \"gray.500\", dark: \"gray.400\" };\n\n  return (\n    <Flex\n      py=\"4\"\n      px={[\"2\", \"4\", \"10\", \"10\"]}\n      borderBottom=\"2px\"\n      borderBottomColor={underlineColor[colorMode]}\n    >\n      <Spacer flex=\"1\" />\n      <Heading maxW={[\"302px\", \"4xl\", \"4xl\", \"4xl\"]}>\n        ETH Calldata Decoder\n      </Heading>\n      <Flex flex=\"1\" justifyContent=\"flex-end\" alignItems={\"center\"}>\n        <Button onClick={toggleColorMode} rounded=\"full\" h=\"40px\" w=\"40px\">\n          {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n        </Button>\n        <Box pl=\"1rem\">\n          <Link\n            href={\"https://github.com/apoorvlathey/eth-calldata-decoder\"}\n            isExternal\n          >\n            <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n          </Link>\n        </Box>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport {\n  useColorMode,\n  Flex,\n  HStack,\n  VStack,\n  Heading,\n  Spacer,\n  Link,\n  Text,\n} from \"@chakra-ui/react\";\nimport { ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGithub,\n  faLinkedin,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Social = ({ icon, link }) => {\n  return (\n    <Link href={link} isExternal>\n      <FontAwesomeIcon icon={icon} size=\"lg\" />\n    </Link>\n  );\n};\n\nfunction Footer() {\n  const { colorMode } = useColorMode();\n  const underlineColor = { light: \"gray.500\", dark: \"gray.400\" };\n\n  return (\n    <Flex py=\"4\" borderTop=\"2px\" borderTopColor={underlineColor[colorMode]}>\n      <Spacer flex=\"1\" />\n      <VStack>\n        <Heading size=\"md\">\n          Built by:{\" \"}\n          <Link href=\"https://apoorvlathey.com/\" isExternal>\n            <Text decoration=\"underline\" display=\"inline\">\n              Apoorv Lathey\n            </Text>{\" \"}\n            <ExternalLinkIcon />\n          </Link>\n        </Heading>\n        <HStack spacing={8} mt={10}>\n          <Social icon={faTwitter} link=\"https://twitter.com/apoorvlathey\" />\n          <Social icon={faGithub} link=\"https://github.com/CodinMaster\" />\n          <Social\n            icon={faLinkedin}\n            link=\"https://www.linkedin.com/in/apoorvlathey/\"\n          />\n        </HStack>\n      </VStack>\n      <Spacer flex=\"1\" />\n    </Flex>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Body from \"./components/Body/index\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <Body />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst config = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: false,\n};\n\nconst theme = extendTheme({ config });\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}